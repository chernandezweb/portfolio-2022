{"version":3,"file":"static/css/main.7d1e0ed5.css","mappings":"8GAAA,KAKE,mCACA,kCAJA,oIADA,QAKA,CAGF,KACE,wECNF,gBAGE,YAKF,KACE,yBACA,iBAEA,WAME,mBAFA,aAGA,gCAFA,8BAHA,cADA,iBAEA,cAIA,CAEA,sBACE,cAEA,eADA,eACA,CAEA,iCACE,aC7BS,CDkCX,iBACE,cAGA,eADA,gBADA,kBAIA,kBADA,qBEVN,2BFcM,uBAIE,wBC/CO,CDiDP,YALA,WAEA,WAIA,SAFA,kBCtBR,iCAQA,CAJA,yBAIA,CCLA,2BFgBQ,OEhBR,CF0BM,uBACE,cAEA,6BACE,WACA,WAOV,WAOE,sBE7CF,mBF4CE,iCAJA,sBACA,cAFA,iBAIA,gBE3CF,0BFgDE,wBAME,mBALA,wBC9EW,CDgFX,WACA,aACA,8BAHA,YAIA,CAEA,qCACE,sBAEA,yBADA,kBAGA,aACA,qBAFA,WAEA,CAEA,yCAGE,aAFA,SAGA,iBAFA,WAEA,CAIJ,mCACE,kBACA,UAEA,sCACE,eAGF,qCACE,eAKN,2BACE,sBACA,wBACA","sources":["index.scss","App.scss","_utils.scss","css3-mixins.scss"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","@import \"utils\";\n\n@import url('https://fonts.googleapis.com/css2?family=Quantico:ital,wght@0,400;0,700;1,400;1,700&display=swap');\n\nhtml,\nbody,\n#root {\n  height: 100%;\n}\n\n\n\n.app {\n  background-color: #f5f5f5;\n  min-height: 100vh;\n\n  .menu {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 25px 0;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-family: 'Quantico', sans-serif;\n\n    .menu-name {\n      color: rgb(36, 36, 36);\n      font-weight: bold;\n      font-size: 25px;\n\n      .last-name {\n        color: $portfolio-blue;\n      }\n    }\n\n    nav {\n      a {\n        color: rgb(143, 143, 143);\n        margin: 0 0 0 15px;\n        font-weight: bold;\n        font-size: 20px;\n        text-decoration: none;\n        position: relative;\n        @include transition(all linear 0.25s);\n\n        &::after {\n          content: '';\n          width: 0px;\n          height: 5px;\n          background-color: $portfolio-blue;\n          position: absolute;\n          bottom: -5px;\n          left: 50%;\n          @include translate(-50%, 0);\n          @include transition(all linear 0.25s)\n        }\n\n        &:hover {\n          color: rgb(24, 24, 24);\n\n          &::after {\n            content: '';\n            width: 100%;\n          }\n        }\n      }\n    }\n  }\n\n  .home {\n    max-width: 1200px;\n    box-sizing: border-box;\n    margin: 0 auto;\n    @include border-radius(10px);\n    overflow: hidden;\n    box-shadow: 0 15px 25px 0 rgb(218, 218, 218);\n    border: 1px solid #eee;\n    @include transition(all linear 0.1s);\n\n    .top-section {\n      background-color: $portfolio-blue;\n      padding: 50px;\n      color: #fff;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n\n      .avatar-side {\n        background-color: #fff;\n        border-radius: 7px;\n        border: 3px solid rgb(71, 71, 71);\n        width: 300px;\n        height: 300px;\n        margin: 50px 0 -100px 0;\n\n        img {\n          margin: 0;\n          width: 300px;\n          height: 300px;\n          object-fit: cover;\n        }\n      }\n\n      .name-side {\n        text-align: center;\n        width: 50%;\n\n        h1 {\n          font-size: 50px;\n        }\n\n        p {\n          font-size: 25px;\n        }\n      }\n    }\n\n    .bottom-section {\n      background-color: #fff;\n      padding: 100px 50px 50px 50px;\n      text-align: center;\n    }\n  }\n}","@import \"css3-mixins\";\r\n\r\n$portfolio-blue: #2196f3;\r\n$titles-grey: #333333;\r\n$text-black: #000000;\r\n$text-grey: #808080;\r\n$avg-grey: #f7f7f7;\r\n$light-grey: #d3d3d3;\r\n\r\n\r\n// Layout Responsive\r\n$screen-xsm: 576px;\r\n$screen-sm: 768px;\r\n$screen-md: 992px;\r\n$screen-lg: 1200px;\r\n$screen-xl: 1400px;\r\n\r\n$xs-device: \"only screen and (max-width:#{$screen-xsm})\";\r\n$sm-device: \"only screen and (max-width:#{$screen-sm})\";\r\n$md-device: \"only screen and (max-width:#{$screen-md})\";\r\n$lg-device: \"only screen and (max-width:#{$screen-lg})\";\r\n$xl-device: \"only screen and (max-width:#{$screen-xl})\";\r\n\r\n\r\n\r\n\r\n// Mixins\r\n@mixin transform($arguments...) {\r\n  -webkit-transform: $arguments;\r\n  -moz-transform: $arguments;\r\n  -o-transform: $arguments;\r\n  -ms-transform: $arguments;\r\n  transform: $arguments;\r\n}\r\n\r\n@mixin translate($x: 0, $y: 0) {\r\n  @include transform(translate($x, $y));\r\n}","/* -------------------------------------------------------------\r\n  Sass CSS3 Mixins! The Cross-Browser CSS3 Sass Library\r\n  By: Matthieu Aussaguel, http://www.mynameismatthieu.com, @matthieu_tweets\r\n\r\n  List of CSS3 Sass Mixins File to be @imported and @included as you need\r\n\r\n  The purpose of this library is to facilitate the use of CSS3 on different browsers avoiding HARD TO READ and NEVER\r\n  ENDING css files\r\n\r\n  note: All CSS3 Properties are being supported by Safari 5\r\n  more info: http://www.findmebyip.com/litmus/#css3-properties\r\n\r\n------------------------------------------------------------- */\r\n\r\n\r\n////\r\n/// @author Matthieu Aussaguel\r\n/// @group sass-css3-mixins\r\n////\r\n\r\n\r\n/// Adds a browser prefix to the property\r\n/// @param {*} $property Property\r\n/// @param {*} $value Value\r\n\r\n@mixin css3-prefix($property, $value) {\r\n  -webkit-#{$property}: #{$value};\r\n  -khtml-#{$property}: #{$value};\r\n  -moz-#{$property}: #{$value};\r\n  -ms-#{$property}: #{$value};\r\n  -o-#{$property}: #{$value};\r\n  #{$property}: #{$value};\r\n}\r\n\r\n\r\n/// Background Gradient\r\n/// @param {Color} $startColor [#3C3C3C] - Start Color\r\n/// @param {Color} $endColor [#999999] - End Color\r\n\r\n@mixin background-gradient($startColor: #3C3C3C, $endColor: #999999) {\r\n  background-color: $startColor;\r\n  background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));\r\n  background-image: -webkit-linear-gradient(top, $startColor, $endColor);\r\n  background-image:    -moz-linear-gradient(top, $startColor, $endColor);\r\n  background-image:     -ms-linear-gradient(top, $startColor, $endColor);\r\n  background-image:      -o-linear-gradient(top, $startColor, $endColor);\r\n  background-image:         linear-gradient(top, $startColor, $endColor);\r\n  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');\r\n}\r\n\r\n\r\n/// Background Horizontal\r\n/// @param {Color} $startColor [#3C3C3C] - Start Color\r\n/// @param {Color} $endColor [#999999] - End Color\r\n\r\n@mixin background-horizontal($startColor: #3C3C3C, $endColor: #999999) {\r\n  background-color: $startColor;\r\n  background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));\r\n  background-image: -webkit-linear-gradient(left, $startColor, $endColor);\r\n  background-image:    -moz-linear-gradient(left, $startColor, $endColor);\r\n  background-image:     -ms-linear-gradient(left, $startColor, $endColor);\r\n  background-image:      -o-linear-gradient(left, $startColor, $endColor);\r\n  background-image:         linear-gradient(left, $startColor, $endColor);\r\n  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');\r\n}\r\n\r\n\r\n/// Background Horizontal - inverse direction\r\n/// @param {Color} $startColor [#999999] - Start Color\r\n/// @param {Color} $endColor [#3C3C3C] - End Color\r\n\r\n@mixin background-horizontal-inverse($startColor: #999999, $endColor: #3C3C3C) {\r\n  background-color: $startColor;\r\n  background-image: -webkit-gradient(linear, right top, left top, from($startColor), to($endColor));\r\n  background-image: -webkit-linear-gradient(right, $startColor, $endColor);\r\n  background-image:    -moz-linear-gradient(right, $startColor, $endColor);\r\n  background-image:     -ms-linear-gradient(right, $startColor, $endColor);\r\n  background-image:      -o-linear-gradient(right, $startColor, $endColor);\r\n  background-image:         linear-gradient(right, $startColor, $endColor);\r\n  filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$endColor}', endColorStr='#{$startColor}', gradientType='1');\r\n}\r\n\r\n\r\n/// Background Radial\r\n/// @param {Color} $startColor [#3C3C3C] - Start Color\r\n/// @param {Percentage} $startPos [0%] - Start position\r\n/// @param {Color} $endColor [#999999] - End Color\r\n/// @param {Percentage} $endPos [100%] - End position\r\n\r\n@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {\r\n  background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);\r\n  background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));\r\n  background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);\r\n  background: -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);\r\n  background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);\r\n  background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);\r\n}\r\n\r\n\r\n/// Background Size\r\n/// @param {Size} $width [100%] - Width\r\n/// @param {Size} $width [$width] - Height\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin background-size($width: 100%, $height: $width) {\r\n  @if type-of($width) == 'number' and $height != null {\r\n    @include css3-prefix('background-size', $width $height);\r\n  } @else {\r\n    @include css3-prefix('background-size', $width);\r\n  }\r\n}\r\n\r\n\r\n/// Background Color Opacity\r\n/// @param {Color} $color [100%] - Color\r\n/// @param {Double} $opacity [0.85] - Opacity\r\n\r\n@mixin background-opacity($color: #000, $opacity: 0.85) {\r\n  background: $color;\r\n  background: rgba($color, $opacity);\r\n}\r\n\r\n\r\n/// Border Radius\r\n/// @param {Size} $radius [5px] - Radius\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin border-radius($radius: 5px) {\r\n  @include css3-prefix('border-radius', $radius);\r\n}\r\n\r\n\r\n/// Border Radius Separate\r\n/// @param {Size} $topLeftRadius [5px] - Top Left\r\n/// @param {Size} $topRightRadius [5px] - Top Right\r\n/// @param {Size} $bottomLeftRadius [5px] - Bottom Left\r\n/// @param {Size} $bottomRightRadius [5px] - Bottom Right\r\n\r\n@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {\r\n  -webkit-border-top-left-radius:     $topLeftRadius;\r\n  -webkit-border-top-right-radius:    $topRightRadius;\r\n  -webkit-border-bottom-right-radius: $bottomRightRadius;\r\n  -webkit-border-bottom-left-radius:  $bottomLeftRadius;\r\n\r\n  -moz-border-radius-topleft:     $topLeftRadius;\r\n  -moz-border-radius-topright:    $topRightRadius;\r\n  -moz-border-radius-bottomright: $bottomRightRadius;\r\n  -moz-border-radius-bottomleft:  $bottomLeftRadius;\r\n\r\n  border-top-left-radius:     $topLeftRadius;\r\n  border-top-right-radius:    $topRightRadius;\r\n  border-bottom-right-radius: $bottomRightRadius;\r\n  border-bottom-left-radius:  $bottomLeftRadius;\r\n}\r\n\r\n\r\n/// Box\r\n/// @param {*} $orient [horizontal] - Orientation\r\n/// @param {*} $pack [center] - Pack\r\n/// @param {*} $align [center] - Align\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin box($orient: horizontal, $pack: center, $align: center) {\r\n  display: -webkit-box;\r\n  display: -moz-box;\r\n  display: box;\r\n\r\n  @include css3-prefix('box-orient', $orient);\r\n  @include css3-prefix('box-pack', $pack);\r\n  @include css3-prefix('box-align', $align);\r\n}\r\n\r\n\r\n/// Box RGBA\r\n/// @param {Integer} $r [60] - Red\r\n/// @param {Integer} $g [3] - Green\r\n/// @param {Integer} $b [12] - Blue\r\n/// @param {Double} $opacity [0.23] - Opacity\r\n/// @param {Color} $color [#3C3C3C] - Color\r\n\r\n@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {\r\n  background-color: transparent;\r\n  background-color: rgba($r, $g, $b, $opacity);\r\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');\r\n  zoom:   1;\r\n}\r\n\r\n\r\n/// Box Shadow\r\n/// @param {Size} $x [2px] - X\r\n/// @param {Size} $y [2px] - Y\r\n/// @param {Size} $blur [5px] - Blur\r\n/// @param {Color} $color [rgba(0,0,0,.4)] - Color\r\n/// @param {Boolean} $inset - Inset\r\n\r\n@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4), $inset: \"\") {\r\n  @if ($inset != \"\") {\r\n    @include css3-prefix('box-shadow', $inset $x $y $blur $color);\r\n  } @else {\r\n    @include css3-prefix('box-shadow', $x $y $blur $color);\r\n  }\r\n}\r\n\r\n\r\n/// Box Sizing\r\n/// @param {*} $type [border-box] - Type\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin box-sizing($type: border-box) {\r\n  @include css3-prefix('box-sizing', $type);\r\n}\r\n\r\n\r\n/// Columns\r\n/// @param {Integer} $count [3] - Count\r\n/// @param {Integer} $gap [10] - Gap\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin columns($count: 3, $gap: 10) {\r\n  @include css3-prefix('column-count', $count);\r\n  @include css3-prefix('column-gap', $gap);\r\n}\r\n\r\n\r\n/// Double Borders\r\n/// @param {Color} $colorOne [#3C3C3C] - Color One\r\n/// @param {Color} $colorTwo [#999999] - Color Two\r\n/// @param {Size} $radius [0] - Radius\r\n/// @require {mixin} css3-prefix\r\n/// @require {mixin} border-radius\r\n\r\n@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {\r\n  border: 1px solid $colorOne;\r\n\r\n  @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);\r\n\r\n  @include border-radius( $radius );\r\n}\r\n\r\n\r\n/// Flex\r\n/// @param {Integer} $value [1] - Value\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin flex($value: 1) {\r\n  @include css3-prefix('box-flex', $value);\r\n}\r\n\r\n\r\n/// Flip\r\n/// @param {Double} $scaleX [-1] - ScaleX\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin flip($scaleX: -1) {\r\n  @include css3-prefix('transform', scaleX($scaleX));\r\n  filter:            FlipH;\r\n  -ms-filter:        \"FlipH\";\r\n}\r\n\r\n\r\n/// Font Face\r\n/// @param {Font} $fontFamily [myFont] - Font Family\r\n/// @param {String} $eotFileSrc ['myFont.eot'] - Eot File Source\r\n/// @param {String} $woffFileSrc ['myFont.woff'] - Woff File Source\r\n/// @param {String} $ttfFileSrc ['myFont.ttf'] - Ttf File Source\r\n/// @param {String} $svgFileSrc ['myFont.svg'] - Svg File Source\r\n\r\n@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {\r\n  font-family: $fontFamily;\r\n  src: url($eotFileSrc)  format('eot'),\r\n  url($woffFileSrc) format('woff'),\r\n  url($ttfFileSrc)  format('truetype'),\r\n  url($svgFileSrc + $svgFontID) format('svg');\r\n}\r\n\r\n\r\n/// Opacity\r\n/// @param {Double} $opacity [0.5] - Opacity\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin opacity($opacity: 0.5) {\r\n  $opacityMultiplied: ($opacity * 100);\r\n\r\n  filter:         alpha(opacity=$opacityMultiplied);\r\n  -ms-filter:     \"progid:DXImageTransform.Microsoft.Alpha(Opacity=\" + $opacityMultiplied + \")\";\r\n  @include css3-prefix('opacity', $opacity);\r\n}\r\n\r\n\r\n/// Outline Radius\r\n/// @param {Size} $radius [5px] - Radius\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin outline-radius($radius: 5px) {\r\n  @include css3-prefix('outline-radius', $radius);\r\n}\r\n\r\n\r\n/// Resize\r\n/// @param {*} $directoin [both] - Direction\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin resize($direction: both) {\r\n  @include css3-prefix('resize', $direction);\r\n}\r\n\r\n\r\n/// Rotate\r\n///\r\n/// CSS Matrix Rotation Calculator http://www.boogdesign.com/examples/transforms/matrix-calculator.html\r\n/// @param {Double} $deg [0] - Degree\r\n/// @param {Double} $m11 [0] - M11\r\n/// @param {Double} $m12 [0] - M12\r\n/// @param {Double} $m21 [0] - M21\r\n/// @param {Double} $m22 [0] - M22\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {\r\n  @include css3-prefix('transform', rotate($deg + deg));\r\n  filter: progid:DXImageTransform.Microsoft.Matrix(\r\n                  M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');\r\n  zoom: 1;\r\n}\r\n\r\n\r\n/// Text Shadow\r\n/// @param {Size} $x [2px] - X\r\n/// @param {Size} $y [2px] - Y\r\n/// @param {Size} $blur [2px] - Blur\r\n/// @param {Color} $color [rgba(0,0,0,.4)] - Color\r\n\r\n@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {\r\n  text-shadow: $x $y $blur $color;\r\n}\r\n\r\n\r\n/// Transform\r\n/// @param {List} $params - Params\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin transform($params) {\r\n  @include css3-prefix('transform', $params);\r\n}\r\n\r\n\r\n/// Transform-Origin\r\n/// @param {List} $params - Params\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin transform-origin($params) {\r\n  @include css3-prefix('transform-origin', $params);\r\n}\r\n\r\n\r\n// Transform-Style\r\n/// @param {List} $params - Params\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin transform-style($style: preserve-3d) {\r\n  @include css3-prefix('transform-style', $style);\r\n}\r\n\r\n/// Transition\r\n/// @param {List} $properties - Properties\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin transition($properties...) {\r\n\r\n  @if length($properties) >= 1 {\r\n    @include css3-prefix('transition', $properties);\r\n  }\r\n\r\n  @else {\r\n    @include css3-prefix('transition',  \"all 0.2s ease-in-out 0s\");\r\n  }\r\n}\r\n\r\n\r\n/// Triple Borders\r\n/// @param {Color} $colorOne [#3C3C3C] - Color One\r\n/// @param {Color} $colorTwo [#999999] - Color Two\r\n/// @param {Color} $colorThree [#000000] - Color Three\r\n/// @param {Size} $radius [0] - Radius\r\n/// @require {mixin} border-radius\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {\r\n  border: 1px solid $colorOne;\r\n\r\n  @include border-radius($radius);\r\n\r\n  @include css3-prefix('box-shadow', \"0 0 0 1px #{$colorTwo}, 0 0 0 2px #{$colorThree}\");\r\n}\r\n\r\n\r\n/// Keyframes\r\n/// @param {*} $animation-name - Animation name\r\n/// @content [Animation css]\r\n\r\n@mixin keyframes($animation-name) {\r\n  @-webkit-keyframes #{$animation-name} {\r\n    @content;\r\n  }\r\n  @-moz-keyframes #{$animation-name} {\r\n    @content;\r\n  }\r\n  @-ms-keyframes #{$animation-name} {\r\n    @content;\r\n  }\r\n  @-o-keyframes #{$animation-name} {\r\n    @content;\r\n  }\r\n  @keyframes #{$animation-name} {\r\n    @content;\r\n  }\r\n}\r\n\r\n\r\n/// Animation\r\n/// @param {*} $str - name duration timing-function delay iteration-count direction fill-mode play-state ([http://www.w3schools.com/cssref/css3_pr_animation.asp](http://www.w3schools.com/cssref/css3_pr_animation.asp))\r\n/// @require {mixin} css3-prefix\r\n\r\n@mixin animation($str) {\r\n  @include css3-prefix('animation', $str);\r\n}\r\n\r\n\r\n\r\n@mixin object-fit($fit: fill, $position: null){\r\n  -o-object-fit: $fit;\r\n  object-fit: $fit;\r\n  @if $position {\r\n    -o-object-position: $position;\r\n    object-position: $position;\r\n    font-family: 'object-fit: #{$fit}; object-position: #{$position}';\r\n  } @else {\r\n    font-family: 'object-fit: #{$fit}';\r\n  }\r\n}"],"names":[],"sourceRoot":""}